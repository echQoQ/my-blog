import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as h,d as t,b as a,e as i,o}from"./app-nYoWO_Lo.js";const n={};function s(p,e){return o(),h("div",null,e[0]||(e[0]=[t('<h1 id="historical-ciphers-and-their-cryptanalysis" tabindex="-1"><a class="header-anchor" href="#historical-ciphers-and-their-cryptanalysis"><span>Historical Ciphers and their cryptanalysis</span></a></h1><h2 id="caesar-s-cipher" tabindex="-1"><a class="header-anchor" href="#caesar-s-cipher"><span>Caesar&#39;s cipher</span></a></h2><p><strong>Encryption:</strong></p><p>Shift the letters of the alphabet 3 places forward</p><blockquote><p>There is no key because the encryption method is fixed.</p></blockquote><h2 id="the-shift-cipher" tabindex="-1"><a class="header-anchor" href="#the-shift-cipher"><span>The shift cipher</span></a></h2><blockquote><p>The shift cipher can be viewed as a keyed variant of Caesar&#39;s cipher.</p></blockquote><p><strong>Encryption:</strong></p><p>The key k is a number between 0 and 25. To encrypt, letters are shifted by k places forward.</p><p><strong>Attack:</strong></p><p>Try every possible key. This is called a brute-force or exhausitive-search attack.</p><h3 id="sufficient-key-space-principle" tabindex="-1"><a class="header-anchor" href="#sufficient-key-space-principle"><span><em>sufficient key-space principle</em></span></a></h3><p><em>Any secure encryption scheme must have a key space that is sufficiently large to make an exhaustive-search attack infeasible.</em></p><h2 id="the-mon-alphabetic-substitution-cipher" tabindex="-1"><a class="header-anchor" href="#the-mon-alphabetic-substitution-cipher"><span>The mon-alphabetic substitution cipher</span></a></h2><p><strong>Encryption:</strong></p><p>The key defines a map on the alphabet, and the map is allowed to be arbitrary subject only to the constraint that it be one-to-one.</p><p><strong>Example:</strong></p><p>The key defines the following permutation:</p><table><thead><tr><th>a</th><th>b</th><th>c</th><th style="text-align:center;">d</th><th>e</th><th>f</th><th>g</th><th>h</th><th>i</th><th>j</th><th>k</th><th>l</th><th>m</th><th>n</th><th>o</th><th>p</th><th>q</th><th>r</th><th>s</th><th>t</th><th>u</th><th>v</th><th>w</th><th>x</th><th>y</th><th>z</th></tr></thead><tbody><tr><td>X</td><td>E</td><td>U</td><td style="text-align:center;">A</td><td>D</td><td>N</td><td>B</td><td>K</td><td>V</td><td>M</td><td>R</td><td>O</td><td>C</td><td>Q</td><td>F</td><td>S</td><td>Y</td><td>H</td><td>W</td><td>G</td><td>L</td><td>Z</td><td>I</td><td>J</td><td>P</td><td>T</td></tr></tbody></table><p>Message <code>tellhimaboutme</code> is encrypted to <code>GDOOKVCXEFLGCD</code></p><p><strong>Attack:</strong></p><p>Tabulate the frequency distribution of characters in the cipher text. The frequencies are then compared to compared to the known letter frequencies of normal English text.</p><h2 id="an-improved-attack-on-the-shift-cipher" tabindex="-1"><a class="header-anchor" href="#an-improved-attack-on-the-shift-cipher"><span>An improved attack on the shift cipher</span></a></h2><blockquote><p>It is difficult for a compute to check whether a given plaintext &quot;make sense&quot;. But the following attack does not suffer from that.</p></blockquote><p>Let $p_i$ denotes the frequency of the $i$th letter in normal English text.</p><p>$$ \\sum ^{25} _{i=0} p^2_i \\approx 0.065 $$</p><p>Now say we are given some ciphertext and let $q_i$ denotes the frequency of $i$th letter of the alphabet in this ciphertext.</p>',27),a("p",null,[i("$$ I_j \\overset{\\underset{\\mathrm{def}}{}}{=} \\sum ^{25}"),a("em",{"i+j":""},"{i=0} p_i \\cdot q"),i(" $$")],-1),t('<p>If we compute for each value of $j \\in { 0, \\ldots, 25 }$, the we expect to find that $I_k \\approx 0.065$, whereas $I_j$ for $j \\neq k$ will be different from 0.065.</p><h2 id="the-vigen-grave-e-re-poly-alphabetic-shift-cipher" tabindex="-1"><a class="header-anchor" href="#the-vigen-grave-e-re-poly-alphabetic-shift-cipher"><span>The Vigen$\\grave{e}$re (poly-alphabetic shift) cipher</span></a></h2><p><strong>Encryption:</strong></p><p>The key is viewed as a string of letters; encryption is done by shifting each plaintext character by the amount indicated by the next character of the key, wrapping around in the key when necessary.</p><p><strong>Example:</strong></p><table><thead><tr><th style="text-align:left;">Plaintext:</th><th style="text-align:left;">tellhimaboutme</th></tr></thead><tbody><tr><td style="text-align:left;">Key (repeated):</td><td style="text-align:left;">cafecafecafeca</td></tr><tr><td style="text-align:left;">Ciphertext</td><td style="text-align:left;">VEQPJIREDOZXOE</td></tr></tbody></table><p><strong>Attack:</strong></p><p>If the length of the key if known:</p><p>Say the length of the key is $t$, then an observed cipher $c = c_1c_2\\cdots$ can be divided into $t$ parts where each part can be viewed as having been encrypted using the shift cipher.</p><p>How to determine the key length from an observed ciphertext ?</p><p>The following approach is called the <em>index of coincidence method</em>.</p><p>For $\\tau = 1,2,\\ldots,T$, look at the sequence of ciphertext characters $c_1, c_{1+\\tau}, c_{1+2\\tau}, \\cdots$ and tabulate $q_0, \\cdots, q_{25}$ for this sequence. Then compute</p><p>$$ S_{\\tau} \\overset{\\underset{\\mathrm{def}}{}}{=} \\sum ^{25}_{i=0} q_i^2 $$</p><p>When $\\tau = t$ we expect $S_{\\tau} \\approx 0.065$</p><p>On the other hand, if $\\tau$ is not a multiple of $t$ we expect that all characters will occur with roughly equal probability in the sequence $c_1, c_{1+\\tau}, c_{1+2\\tau}, \\cdots$ , and so we expect $q_i \\approx 1 / 26$ for all $i$. In this case we will obtain</p><p>$$ S_{\\tau} \\approx \\sum^{25}_{i=0} (\\frac{1}{26})^2 \\approx 0.038 $$</p>',16)]))}const d=r(n,[["render",s],["__file","1.html.vue"]]),f=JSON.parse(`{"path":"/notes/Introduction%20to%20Modern%20Cryptography/1.html","title":"Historical Ciphers and their cryptanalysis","lang":"zh-CN","frontmatter":{"title":"Historical Ciphers and their cryptanalysis","cover":"/assets/images/cover1.jpg","icon":"paper-plane","order":1,"author":"Mr.Liu","date":"2024-11-05T00:00:00.000Z","category":["密码学"],"tag":["笔记"],"sticky":false,"star":false,"footer":"箱根山岳险天下","copyright":"无版权","description":"Historical Ciphers and their cryptanalysis Caesar's cipher Encryption: Shift the letters of the alphabet 3 places forward There is no key because the encryption method is fixed....","head":[["meta",{"property":"og:url","content":"https://echqoq.github.io/my-blog/my-blog/notes/Introduction%20to%20Modern%20Cryptography/1.html"}],["meta",{"property":"og:site_name","content":"Mr.Liu"}],["meta",{"property":"og:title","content":"Historical Ciphers and their cryptanalysis"}],["meta",{"property":"og:description","content":"Historical Ciphers and their cryptanalysis Caesar's cipher Encryption: Shift the letters of the alphabet 3 places forward There is no key because the encryption method is fixed...."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://echqoq.github.io/my-blog/my-blog/assets/images/cover1.jpg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-05T06:18:21.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://echqoq.github.io/my-blog/my-blog/assets/images/cover1.jpg"}],["meta",{"name":"twitter:image:alt","content":"Historical Ciphers and their cryptanalysis"}],["meta",{"property":"article:author","content":"Mr.Liu"}],["meta",{"property":"article:tag","content":"笔记"}],["meta",{"property":"article:published_time","content":"2024-11-05T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-05T06:18:21.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Historical Ciphers and their cryptanalysis\\",\\"image\\":[\\"https://echqoq.github.io/my-blog/my-blog/assets/images/cover1.jpg\\"],\\"datePublished\\":\\"2024-11-05T00:00:00.000Z\\",\\"dateModified\\":\\"2024-11-05T06:18:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Liu\\"}]}"]]},"headers":[{"level":2,"title":"Caesar's cipher","slug":"caesar-s-cipher","link":"#caesar-s-cipher","children":[]},{"level":2,"title":"The shift cipher","slug":"the-shift-cipher","link":"#the-shift-cipher","children":[{"level":3,"title":"sufficient key-space principle","slug":"sufficient-key-space-principle","link":"#sufficient-key-space-principle","children":[]}]},{"level":2,"title":"The mon-alphabetic substitution cipher","slug":"the-mon-alphabetic-substitution-cipher","link":"#the-mon-alphabetic-substitution-cipher","children":[]},{"level":2,"title":"An improved attack on the shift cipher","slug":"an-improved-attack-on-the-shift-cipher","link":"#an-improved-attack-on-the-shift-cipher","children":[]},{"level":2,"title":"The Vigen$\\\\grave{e}$re (poly-alphabetic shift) cipher","slug":"the-vigen-grave-e-re-poly-alphabetic-shift-cipher","link":"#the-vigen-grave-e-re-poly-alphabetic-shift-cipher","children":[]}],"git":{"createdTime":1730787501000,"updatedTime":1730787501000,"contributors":[{"name":"ech0o0","email":"3354333102@qq.com","commits":1}]},"readingTime":{"minutes":2.47,"words":741},"filePathRelative":"notes/Introduction to Modern Cryptography/1.md","localizedDate":"2024年11月5日","excerpt":"\\n<h2>Caesar's cipher</h2>\\n<p><strong>Encryption:</strong></p>\\n<p>Shift the letters of the alphabet 3 places forward</p>\\n<blockquote>\\n<p>There is no key because the encryption method is fixed.</p>\\n</blockquote>\\n<h2>The shift cipher</h2>\\n<blockquote>\\n<p>The shift cipher can be viewed as a keyed variant of Caesar's cipher.</p>\\n</blockquote>","autoDesc":true}`);export{d as comp,f as data};
